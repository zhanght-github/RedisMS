<?xml version="1.0" encoding="UTF-8"?>
<!--整个配置文件的根节点，包含一个或者多个bean元素 -->
<!--xmlns是命名空间的定义，xsi:schemalocation是上述命名空间定义配套的文件的装载路径-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd">

    <!-- 引入配置文件 -->
    <context:property-placeholder location="classpath:*.properties" />

    <!--初始entity实体管理器-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="permissionPersistenceUnit"/>
    </bean>
    <!--初始transaction事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--初始化spring JPA-->
    <jpa:repositories base-package="com.redis"
                      entity-manager-factory-ref="entityManagerFactory"
                      transaction-manager-ref="transactionManager"
                      repository-impl-postfix="Impl">
    </jpa:repositories>
    <!--org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean -->





    <!-- 建立视图内拦截器来解决JPA中访问延迟加载属性时产生的无会话异常 -->
    <!-- LazyInitializationException: could not initialize proxy no session -->
    <!-- 此拦截器会注入到servlet配置中的DefaultAnnotationHandlerMapping中 -->
    <bean name="openEntityManagerInViewInterceptor"
          class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
        <property name="entityManagerFactory">
            <ref bean="entityManagerFactory"/>
        </property>
    </bean>
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <list>
                <ref bean="openEntityManagerInViewInterceptor" />
            </list>
        </property>
    </bean>


    <!-- redis工具 -->
    <bean id="redisUtil" class="com.redis.utils.RedisUtil">
        <property name="maxTotal" value="${redis.init.maxTotal}" />
        <property name="maxIdle" value="${redis.init.maxIdle}" />
        <property name="minIdle" value="${redis.init.minIdle}" />
        <property name="holed" value="${redis.init.maxWaitMillis}" />
        <property name="port" value="${redis.init.port}" />
        <property name="host" value="${redis.init.host}" />
        <property name="timeout" value="${redis.init.timeout}" />
        <property name="password" value="${redis.init.psw}" />
        <property name="DB" value="${redis.init.DB}" />
    </bean>

    <!-- 开启这个配置，spring才能识别@Scheduled注解 -->
    <task:executor id="executor" pool-size="1" />
    <task:scheduler id="scheduler" pool-size="1" />
    <task:annotation-driven executor="executor" scheduler="scheduler" />


</beans>